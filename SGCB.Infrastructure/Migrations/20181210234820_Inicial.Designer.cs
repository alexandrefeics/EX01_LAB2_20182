// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGCB.Infrastructure.Dados;

namespace SGCB.Infrastructure.Migrations
{
    [DbContext(typeof(ContextSGCB))]
    [Migration("20181210234820_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGCB.ApplicationCore.Entity.Conta", b =>
                {
                    b.Property<int>("ContaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAbertura");

                    b.Property<int>("MovimentacaoId");

                    b.Property<int>("Numero");

                    b.Property<bool>("Situacao");

                    b.Property<int>("TipoContaId");

                    b.HasKey("ContaId");

                    b.HasIndex("MovimentacaoId");

                    b.HasIndex("TipoContaId");

                    b.ToTable("Contas");
                });

            modelBuilder.Entity("SGCB.ApplicationCore.Entity.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(80)");

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(40)");

                    b.Property<int>("PessoaId");

                    b.HasKey("EnderecoId");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("SGCB.ApplicationCore.Entity.Movimentacao", b =>
                {
                    b.Property<int>("MovimentacaoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContaId");

                    b.Property<DateTime>("DataMovimentacao");

                    b.Property<decimal>("Valor");

                    b.HasKey("MovimentacaoId");

                    b.ToTable("Movimentacaos");
                });

            modelBuilder.Entity("SGCB.ApplicationCore.Entity.Pessoa", b =>
                {
                    b.Property<int>("PessoaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("varchar(11)");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.HasKey("PessoaId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("SGCB.ApplicationCore.Entity.TipoConta", b =>
                {
                    b.Property<int>("TipoContaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContaId");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(500)");

                    b.HasKey("TipoContaId");

                    b.ToTable("TipoContas");
                });

            modelBuilder.Entity("SGCB.ApplicationCore.Entity.Transacao", b =>
                {
                    b.Property<int>("TransacaoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContaId");

                    b.Property<int>("PessoaId");

                    b.HasKey("TransacaoId");

                    b.HasIndex("ContaId");

                    b.HasIndex("PessoaId");

                    b.ToTable("Transacaos");
                });

            modelBuilder.Entity("SGCB.ApplicationCore.Entity.Conta", b =>
                {
                    b.HasOne("SGCB.ApplicationCore.Entity.Movimentacao", "Movimentacao")
                        .WithMany("Contas")
                        .HasForeignKey("MovimentacaoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGCB.ApplicationCore.Entity.TipoConta", "TipoConta")
                        .WithMany("Contas")
                        .HasForeignKey("TipoContaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGCB.ApplicationCore.Entity.Endereco", b =>
                {
                    b.HasOne("SGCB.ApplicationCore.Entity.Pessoa", "Pessoa")
                        .WithOne("Endereco")
                        .HasForeignKey("SGCB.ApplicationCore.Entity.Endereco", "PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGCB.ApplicationCore.Entity.Transacao", b =>
                {
                    b.HasOne("SGCB.ApplicationCore.Entity.Conta")
                        .WithMany("Transacaos")
                        .HasForeignKey("ContaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGCB.ApplicationCore.Entity.Pessoa")
                        .WithMany("Transacaos")
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
